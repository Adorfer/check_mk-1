#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# updated by
# Christian Burmeister 05/2015


def list_find(item, list):
        found = False
        for i in list:
                if item.lower().find(i.lower()) != -1:
                        found = True
                        break

        return found


def inventory_snmp_info_v2(info):
    if len(info[2][0]) >= 4:

        serialnum = ""
        if len(info[0]) >= 1:
                if info[0][0][0] != "":
                        serialnum = info[0][0][0]
                else:
                        serialnum = info[0][0][1]
        else:
                serialnum = "NOTFOUND"

        return [ (None, [serialnum.strip()]) ]

def check_firmware(switch_info):
        sysDescr  = switch_info[3]
        modelName = switch_info[5]

        if list_find(sysDescr, ["sysDescr: Cisco IOS Software","sysDescr: Cisco Internetwork Operating System Software"]):
                expect_firmware = ["IPSERVICESK9","ENTSERVICESK9","PK9S","SPSERVICESK9","UNIVERSALK9", "IPBASEK9", "LANBASEK9", "C2950-I6K2L2Q4-M"]
                expect_firmware += ["CBS30X0-LANBASE-M", "CBS30X0-IPBASE-M"]
                if not list_find(sysDescr, expect_firmware):
                        switch_info.append("INFO: Firmware-Version nicht bekannt, ggf. ohne SSH (!)")


def check_snmp_info_v2(item, params, info):

    if len(info[2][0]) >= 4:
        switch_info = []

        switch_info.append("sysName: "     + info[2][0][2])
        switch_info.append("sysLocation: " + info[2][0][3])
        switch_info.append("sysContact: "  + info[2][0][1])
        switch_info.append("sysDescr: "    + info[2][0][0])

        serialnum = ""
        if len(info[0]) >= 1:
                if info[0][0][0] != "":
                        serialnum = info[0][0][0]
                        switch_info.append("SerialNum: " + serialnum)
                else:
                        serialnum = info[0][0][1]
                        switch_info.append("SerialNum: " + serialnum)
        else:
                serialnum = "NOTFOUND"
                switch_info.append("SerialNum: " + serialnum)


        if len(info[1]) >= 1:
                if info[1][0][0] != "":
                        switch_info.append("ModelName: " + info[1][0][0])
                else:
                        switch_info.append("ModelName: " + info[1][0][1])
        else:
                switch_info.append("ModelName: NOTFOUND")


        check_firmware(switch_info)

        stored_serialnum = params[0].strip()
        if stored_serialnum == serialnum.strip():
                return (0, ' ---- '.join(switch_info))
        else:
                return (1, "SerialNum changed: (old: "+ stored_serialnum  +") (!) Wahrscheinlich wurde das Geraet getauscht! -- " + ' ---- '.join(switch_info))
    else:
        return (3, "No data retrieved")


# This check works on all SNMP hosts
check_info["snmp_info_v2"] = {
    'check_function':          check_snmp_info_v2,
    'inventory_function':      inventory_snmp_info_v2,
    'service_description':     'SNMP Info v2',
    'snmp_info':               [(".1.3.6.1.2.1.47.1.1.1.1.11",  ["1", "1001"]), # entPhysicalSerialNum
                                (".1.3.6.1.2.1.47.1.1.1.1.13",  ["1", "1001"]), # entPhysicalModelName
                                ('.1.3.6.1.2.1.1', ['1',  #sysDescr
                                                    '4',  #sysContact
                                                    '5',  #sysName
                                                    '6']) #sysLocation
                                ],
    'snmp_scan_function':      lambda oid: oid(".1.3.6.1.2.1.1.1.0") != None,
}
