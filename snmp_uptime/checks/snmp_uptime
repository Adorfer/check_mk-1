#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


#https://tools.cisco.com/quickview/bug/CSCeh49492


def inventory_snmp_uptime(info):
    if len(info) > 0 and len(info[0]) >= 1:
        return [ (None, {}) ]

def check_snmp_uptime(checktype, params, info):
    sysUpTime, snmpEngineTime, whyReload = info

    sysUpTime = parse_snmp_uptime(sysUpTime[0][0])

    if snmpEngineTime != []:
        snmpEngineTime = saveint(snmpEngineTime[0][0])

        diff = snmpEngineTime - sysUpTime
        if snmpEngineTime > sysUpTime:
                greater_UpTime = snmpEngineTime
                msg_info = " (snmpEngineTime Diff: "+ str(diff) +")"
        else:
                greater_UpTime = sysUpTime
                msg_info = " (sysUpTime Diff: "+ str(diff) +")"
    else:
        greater_UpTime = sysUpTime
        msg_info = ""
 

    state, msg, perfdata = check_uptime_seconds(params, greater_UpTime) 

    
    try:
        msg += " --- whyReload: " + str(whyReload[0][0])
    except:
        pass
   
    one_hour = 3600
    if greater_UpTime < one_hour:
        state = 1
        msg += " (!)Neustart innerhalb der letzten Stunde(!)"
 
    return (state, msg, perfdata)


check_info["snmp_uptime"] = {
    'check_function'        :  check_snmp_uptime,
    'inventory_function'    :  inventory_snmp_uptime,
    'service_description'   :  'Uptime',
    'has_perfdata'          :  True,
    'snmp_info'             :  [('.1.3.6.1.2.1.1', ['3.0']), # DISMAN-EVENT-MIB::sysUpTime
                                ('.1.3.6.1.6.3.10.2.1', ['3.0']), # snmpEngineTime
                                ('.1.3.6.1.4.1.9.2.1.2', ["0"]), #whyReload
                               ],
    'snmp_scan_function'    :  lambda oid: oid(".1.3.6.1.2.1.1.1.0") != None,
    'group'                 :  'uptime',
    'includes'              :  [ 'uptime.include' ],
}
