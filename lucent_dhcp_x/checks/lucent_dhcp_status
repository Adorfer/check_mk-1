#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# OID: 1.3.6.1.4.1.9.9.171.1.2.3.1.7.###
# cikeTunRemoteValue
# Description
#       "The value of the remote peer identity.
#       If the remote peer type is an IP Address, then this
#       is the IP Address used to identify the remote peer.
#       If the remote peer type is a host name, then
#       this is the host name used to identify the
#       remote peer."




dhcpServSystemStatus_map = { "0":"starting", "1":"running", "2":"stopping", "3":"stopped", "4":"reload" }
def inventory_lucent_dhcp_status(info):
    return [(None, None )]


def check_lucent_dhcp_status(item, params, info):

    dhcpServSystemStatus = info[0][0]
    dhcpServSystemResetTime = int(info[0][2])
    msg = "SystemStatus: %s" % dhcpServSystemStatus_map[dhcpServSystemStatus]
    msg += ", last DHCP-Generation: %s " % time.strftime('%HH:%MM:%SS', time.gmtime(dhcpServSystemResetTime))
    if dhcpServSystemStatus == "1":
	status = 0
    else:
	status = 2
	msg += " -- System not running (!!) -- "

    msg += ", Subnet: (used: %s, unused: %s , full: %s)" % (info[0][3], info[0][4], info[0][5])
	

    time_hour = int(datetime.datetime.now().time().strftime('%H'))
    if time_hour in [7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]:
	
	minuten = 70
	if dhcpServSystemResetTime > (minuten * 60):
		status = 1
		msg += " -- last DHCP-Generation older than %s min (!)" % minuten

    perfdata = []
    
    oid_desc = ["dhcpServSystemStatus",
                "dhcpServSystemUpTime",
                "dhcpServSystemResetTime",
                "dhcpServCountUsedSubnets",
                "dhcpServCountUnusedSubnets",
                "dhcpServCountFullSubnets",
                "dhcpServBootpCountRequests",
                "dhcpServBootpCountInvalids",
                "dhcpServBootpCountReplies",
                "dhcpServBootpCountDroppedUnknownClients",
                "dhcpServBootpCountDroppedNotServingSubnet",
                "dhcpServDhcpCountDiscovers",
                "dhcpServDhcpCountRequests",
                "dhcpServDhcpCountReleases",
                "dhcpServDhcpCountDeclines",
                "dhcpServDhcpCountInforms",
                "dhcpServDhcpCountInvalids",
                "dhcpServDhcpCountOffers",
                "dhcpServDhcpCountAcks",
                "dhcpServDhcpCountNacks",
                "dhcpServDhcpCountDroppedUnknownClient",
                "dhcpServDhcpCountDroppedNotServingSubnet",
                "dhcpServBootpStatMinArrivalInterval",
                "dhcpServBootpStatMaxArrivalInterval",
                "dhcpServBootpStatLastArrivalTime",
                "dhcpServBootpStatMinResponseTime",
                "dhcpServBootpStatMaxResponseTime",
                "dhcpServBootpStatSumResponseTime",
                "dhcpServDhcpStatMinArrivalInterval",
                "dhcpServDhcpStatMaxArrivalInterval",
                "dhcpServDhcpStatLastArrivalTime",
                "dhcpServDhcpStatMinResponseTime",
                "dhcpServDhcpStatMaxResponseTime",
                "dhcpServDhcpStatSumResponseTime"]

    for i in range(len(info[0])):
	perfdata.append( (oid_desc[i], info[0][i]) )


    return (status, msg, perfdata)

check_info["lucent_dhcp_status"] = {
    "check_function"        : check_lucent_dhcp_status,
    "inventory_function"    : inventory_lucent_dhcp_status,
    "service_description"   : "Lucent_Status",
    "has_perfdata"          : True,
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.4.1.1751.1.48.1.1.1.1.1.*") != None,
    "snmp_info"             : ( ".1.3.6.1.4.1.1751.1.48.1.1.1.1", [  "1.2.0",   # dhcpServSystemStatus
                                                                     "1.3.0",   # dhcpServSystemUpTime
                                                                     "1.4.0",   # dhcpServSystemResetTime
                                                                     "2.1.0",   # dhcpServCountUsedSubnets
                                                                     "2.2.0",   # dhcpServCountUnusedSubnets
                                                                     "2.3.0",   # dhcpServCountFullSubnets
                                                                     "3.1.0",   # dhcpServBootpCountRequests
                                                                     "3.2.0",   # dhcpServBootpCountInvalids
                                                                     "3.3.0",   # dhcpServBootpCountReplies
                                                                     "3.4.0",   # dhcpServBootpCountDroppedUnknownClients
                                                                     "3.5.0",   # dhcpServBootpCountDroppedNotServingSubnet
                                                                     "4.1.0",   # dhcpServDhcpCountDiscovers
                                                                     "4.2.0",   # dhcpServDhcpCountRequests
                                                                     "4.3.0",   # dhcpServDhcpCountReleases
                                                                     "4.4.0",   # dhcpServDhcpCountDeclines
                                                                     "4.5.0",   # dhcpServDhcpCountInforms
                                                                     "4.6.0",   # dhcpServDhcpCountInvalids
                                                                     "4.7.0",   # dhcpServDhcpCountOffers
                                                                     "4.8.0",   # dhcpServDhcpCountAcks
                                                                     "4.9.0",   # dhcpServDhcpCountNacks
                                                                     "4.10.0",  # dhcpServDhcpCountDroppedUnknownClient
                                                                     "4.11.0",  # dhcpServDhcpCountDroppedNotServingSubnet
                                                                     "5.1.0",   # dhcpServBootpStatMinArrivalInterval
                                                                     "5.2.0",   # dhcpServBootpStatMaxArrivalInterval
                                                                     "5.3.0",   # dhcpServBootpStatLastArrivalTime
                                                                     "5.4.0",   # dhcpServBootpStatMinResponseTime
                                                                     "5.5.0",   # dhcpServBootpStatMaxResponseTime
                                                                     "5.6.0",   # dhcpServBootpStatSumResponseTime
                                                                     "6.1.0",   # dhcpServDhcpStatMinArrivalInterval
                                                                     "6.2.0",   # dhcpServDhcpStatMaxArrivalInterval
                                                                     "6.3.0",   # dhcpServDhcpStatLastArrivalTime
                                                                     "6.4.0",   # dhcpServDhcpStatMinResponseTime
                                                                     "6.5.0",   # dhcpServDhcpStatMaxResponseTime
                                                                     "6.6.0",   # dhcpServDhcpStatSumResponseTime                               
 						] ),
}
