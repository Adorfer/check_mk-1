#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

dhcpServFailoverPartnerType_map   = { "1":"primar", "2":"failover/standby", "3":"unconfigured"}
dhcpServFailoverPartnerStatus_map = { "0":"unknown", "1":"syncing", "2":"active", "3":"inactive"}



def inventory_lucent_dhcp_failover(info):
	return [(None, info[0][:3])]

def check_lucent_dhcp_failover(item, params, info):
        

   	server          = info[0][0]
	failover_type   = dhcpServFailoverPartnerType_map[info[0][1]]
	failover_status = dhcpServFailoverPartnerStatus_map[info[0][2]]
	failover_time   = time.ctime(int(info[0][3]))

#['10.2.4.100', '1', '2']
#[['10.2.4.100', '1', '2', '1430213751']]
	
	msg = "Server %s, Type: %s, Status: %s, Last successfull communication: %s" % (server, failover_type, failover_status,  failover_time)
	if int(info[0][1]) < 3 and params == info[0][:3]:
		status = 0
	else:
		
		status = 1
		msg += " -- STATE CHANGED (!) -- OLD: Type: %s, Status: %s" % (dhcpServFailoverPartnerType_map[params[1]], dhcpServFailoverPartnerStatus_map[params[2]])

	return (status, msg)

# This check works on all SNMP hosts
check_info["lucent_dhcp_failover"] = {
    'check_function':          check_lucent_dhcp_failover,
    'inventory_function':      inventory_lucent_dhcp_failover,
    'service_description':     'Lucent_Failover',
    "snmp_info"             : ( ".1.3.6.1.4.1.1751.1.48.1.1.1.1.8.1.1", [ "1", # dhcpServFailoverPartnerAddr
                                                                         "2", # dhcpServFailoverPartnerType
                                                                         "3", # dhcpServFailoverPartnerStatus
                                                                         "4"  # dhcpServFailoverPartnerPolltime 
				]),
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.4.1.1751.1.48.1.1.1.1.1.*") != None,

} 
