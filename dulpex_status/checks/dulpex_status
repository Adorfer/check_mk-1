#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

#Test Inventory
#cmk -II --checks=snmp_duplex asw0038

def inventory_duplex_status(info):
     	
	return [(None, None)]


#Test check
# cmk  --debug -vn --checks=snmp_duplex asw0038
def check_duplex_status(item, params, info):

	if_halfduplex = []
  
	for interface in info[1]:
			
		dot3StatsDuplexStatus_unknown = "1"
		dot3StatsDuplexStatus_halfDuplex = "2"
		dot3StatsDuplexStatus_fullDuplex = "3"

		if interface[1] == dot3StatsDuplexStatus_halfDuplex:
			if_halfduplex.append(interface[0])




		
	if_halfduplex_ifdescr = []
	for interface in if_halfduplex:
		for interface_2 in info[0]:
			if interface == interface_2[0]:
				if_speed = "10"
				if interface_2[2] != if_speed:
					if_halfduplex_ifdescr.append(interface_2[1])
			
	if len(if_halfduplex_ifdescr) != 0:
		return (1, "Interface mit halfDuplex: " + str(if_halfduplex_ifdescr))
	else:
		return (0, "Kein Interface mit halfDuplex gefunden.")
			
		


# This check works on all SNMP hosts

check_info["duplex_status"] = {
    'check_function':          check_duplex_status,
    'inventory_function':      inventory_duplex_status,
    'service_description':     'SNMP Duplex',
   
    'snmp_info':               [( ".1.3.6.1.2.1", [
        "2.2.1.1",      # ifIndex                   0
        "2.2.1.2",      # ifDescr                   1
	"31.1.1.1.15",  # ifHighSpeed               .. 1000 means 1GBit
       ]),
	('.1.3.6.1.2.1.10.7.2.1', [OID_END,'19']),
    ],
    'snmp_scan_function':      lambda oid: oid(".1.3.6.1.2.1.10.7.2.1.19.*") != None,
}
