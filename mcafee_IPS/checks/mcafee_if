#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def parse_mcafee_if(info):
        if_mcafee_mib = ["intfPortIfDescr","intfPortIfAdminStatus", "intfPortIfOperStatus", "intfPortOperatingMode","intfPortInOutType"]

        parsed_info = {}
        for i in range(len(info)):
                for (if_oid, value) in info[i]:
                        if if_oid not in parsed_info:
                                parsed_info[if_oid] = {}
                        parsed_info[if_oid].update( {if_mcafee_mib[i]:value} )

        return parsed_info


def inventory_mcafee_if(info):
        inventory = []
        parsed_info = parse_mcafee_if(info)

        for if_oid in parsed_info:
                if_admin_up = "1"
                if parsed_info[if_oid]["intfPortIfAdminStatus"] == if_admin_up:
                        inventory.append( (parsed_info[if_oid]["intfPortIfDescr"], {"if_oid":if_oid}) )

        return  inventory

def check_mcafee_if(item, params, info):
        parsed_info = parse_mcafee_if(info)
        if_oid = params.get("if_oid")

        intfPortIfStatus_map = {"1":"up", "2":"down"}
        intfPortInOutType_map    = {"1":"inside", "2":"outside", "3":"not-specified"}
        intfPortOperatingMode_map = {"1":"inline-fail-open-passive","2":"monitor-dual-intf","3":"monitor-single-intf",
                                        "4":"inline-fail-close","5":"inline-fail-open-active"}

        msg = []
        warn = 0
        if intfPortIfStatus_map[parsed_info[if_oid]["intfPortIfAdminStatus"]] != "up":
                warn += 1
                msg.append( "IfAdminStatus: " + intfPortIfStatus_map[parsed_info[if_oid]["intfPortIfAdminStatus"]] + "(!)" )  


        if intfPortIfStatus_map[parsed_info[if_oid]["intfPortIfOperStatus"]] != "up":
                warn += 1
                msg.append( "IfOperStatus: " + intfPortIfStatus_map[parsed_info[if_oid]["intfPortIfOperStatus"]] + "(!)" )       

        msg.append( "OperatingMode: " + intfPortOperatingMode_map[parsed_info[if_oid]["intfPortOperatingMode"]] )
        msg.append( "InOutType: " + intfPortInOutType_map[parsed_info[if_oid]["intfPortInOutType"]] )
                
                
        if warn > 0:
                return 1, " - ".join(msg) 
        return 0, " - ".join(msg)





check_info["mcafee_if"] = {
    'check_function':          check_mcafee_if,
    'inventory_function':      inventory_mcafee_if,
    'service_description':     'Interface %s',
    'has_perfdata':            True,
    'snmp_info':               [( ".1.3.6.1.4.1.8962", [OID_END,"2.1.2.1.11.1.1.1"]),     # intfPortIfDescr          
                                ( ".1.3.6.1.4.1.8962", [OID_END,"2.1.2.1.11.1.1.3"]),     # intfPortIfAdminStatus      
                                ( ".1.3.6.1.4.1.8962", [OID_END,"2.1.2.1.11.1.1.4"]),     # intfPortIfOperStatus   
                                ( ".1.3.6.1.4.1.8962", [OID_END,"2.1.2.1.11.1.1.5"]),     # intfPortOperatingMode
                                ( ".1.3.6.1.4.1.8962", [OID_END,"2.1.2.1.11.1.1.11"]),    # intfPortInOutType             
    ],
    'snmp_scan_function'        : lambda oid: oid(".1.3.6.1.4.1.8962.2.1.2.1.1.6.0") == "MCAFEE-NETWORK-SECURITY-PLATFORM",
}
