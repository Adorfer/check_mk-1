#!/usr/bin/python


# author
# Christian Burmeister 05/2015


#http://tools.cisco.com/Support/SNMP/do/BrowseOID.do?objectInput=1.3.6.1.4.1.9.9.650.1.1.4.1.2&translate=Translate&submitValue=SUBMIT&submitClicked=true

def inventory_cisco_ace_cluster(info):
    inventory = []
    if len(info) != 0:
        for oid, value in info[0]:
                inventory.append( (oid[2:], value) )
    return inventory


def check_cisco_ace_cluster(item, params, info):

    cluster_state = {}
    for oid, value in info[0]:
        cluster_state[str(oid[2:])] = str(value)

    clrRedundancyState = {
        "1":"other",
        "2":"nonRedundant",
        "3":"initializing",
        "4":"negotiation",
        "5":"active",
        "6":"standbyCold",
        "7":"standbyConfig",
        "8":"standbyBulk",
        "9":"standbyHot",
        "10":"standbyWarm",
    }

    for ft_group in cluster_state.keys():
        if str(ft_group) == item:

                msg = "ft_group: %s, state: %s" % (ft_group, clrRedundancyState[cluster_state[ft_group]])

                if (clrRedundancyState[cluster_state[ft_group]] in ["active", "standbyHot", "standbyWarm"]) and \
                   (clrRedundancyState[str(params)] in ["active", "standbyHot", "standbyWarm"]):

                        if str(params) == cluster_state[ft_group]:
                                msg += " --> OK"
                                return (0, msg)
                        else:
                                msg += " --> ft_group failed over (!)"
                                return (1, msg)

                        msg += ", state_saved: " + clrRedundancyState[params[ft_group]] + " --> UNKOWN STATE"
                        return (3, msg)

                msg += " --> UNKOWN STATE"
                return (3, msg)



check_info["cisco_ace_cluster"]  = {
    "check_function"     : check_cisco_ace_cluster,
    "inventory_function" : inventory_cisco_ace_cluster,
    "service_description": "ACE-Cluster-Status, ft-group: ",
    "has_perfdata"       : False,
    'snmp_scan_function':      lambda oid: "ACE 4710 Application Control Engine Appliance" in oid(".1.3.6.1.2.1.1.1.0"),
    "snmp_info"          : [(".1.3.6.1.4.1.9.9.650.1.1.4.1", [OID_END, "2"]),   # clrRedundancyState
#                           (".1.3.6.1.6.3.16.1.1.1", ["1"])            # vacmContextName
                        ],
}
