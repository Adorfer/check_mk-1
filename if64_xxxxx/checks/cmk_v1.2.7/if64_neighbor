#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

neighbor_search = []
neighbor_ignore = ['MSI on Windows', "VMware ESX", "VMware"]

def inventory_if64_neighbor(info):
    if_all              = info[0]
    cdpCacheDeviceId    = info[2]
    lldpRemSysName      = info[1]

    tmp_if_all = []
    for interface in if_all:
        if interface == None:
                continue
        tmp_if_all.append([None] + interface)
    if_all = tmp_if_all

    return inventory_if64_params_neighbor(if_all, lldpRemSysName, cdpCacheDeviceId, neighbor_ignore, neighbor_search)


def check_if64_neighbor(item, params, info):
    if_all              = info[0]
    cdpCacheDeviceId    = info[2]
    lldpRemSysName      = info[1]


    info_if64_check = []
    for interface in if_all:
        if interface == None:
                continue
        info_if64_check.append([None] + interface)
        if interface[1] == item:
                return check_if64_neighbor_interface(interface, lldpRemSysName, cdpCacheDeviceId, neighbor_ignore, neighbor_search, params, item)

    
    return check_if64_original(item, params, info_if64_check)




check_info["if64_neighbor"] = {
    'check_function':          check_if64_neighbor,
    'inventory_function':      inventory_if64_neighbor,
    'service_description':     'Interface %s',
    'has_perfdata':            True,
    'includes':                [ 'if.include', 'cdp_lldp_dulpex.include' ],
    'snmp_info':               [( ".1.3.6.1.2.1", if64_snmp_end_oids), 
                                oid_lldpRemSysName,
                                oid_cdpCacheDeviceId,
    ],
    'snmp_scan_function'        : lambda oid: if64_scan_function(oid, False),
    'group'                     : 'if',
    'node_info'                 : True,
    'default_levels_variable'   : 'if_default_levels',
}