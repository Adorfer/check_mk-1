#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Author Christian Burmeister

def inventory_if64_neighbor(info):
    if_all              = info[0]
    cdpCacheDeviceId    = info[2]
    lldpRemSysName      = info[1]

    tmp_if_all = []
    for interface in if_all:
        if interface == None:
                continue
        tmp_if_all.append([None] + interface)
    if_all = tmp_if_all

    return inventory_if64_params_neighbor(if_all, lldpRemSysName, cdpCacheDeviceId)


def check_if64_neighbor(item, params, info):
    if_all              = info[0]
    cdpCacheDeviceId    = info[2]
    lldpRemSysName      = info[1]


    info_if64_check = []
    for interface in if_all:
        if interface == None:
                continue
        info_if64_check.append([None] + interface)
        if interface[1] == item:

                ifAlias = get_neighbor(interface, lldpRemSysName, cdpCacheDeviceId)
                interface[18] =  ifAlias

                return check_if64_neighbor_interface(interface, lldpRemSysName, cdpCacheDeviceId, params, item)

    
    return check_if64(item, params, info_if64_check)




check_info["if64_neighbor"] = {
    'check_function':          check_if64_neighbor,
    'inventory_function':      inventory_if64_neighbor,
    'service_description':     'Interface %s',
    'has_perfdata':            True,
    'includes':                [ 'if.include', 'cdp_lldp_dulpex.include' ],
    'snmp_info':               [( ".1.3.6.1.2.1", [
        "2.2.1.1",     # ifIndex                   0
        "2.2.1.2",     # ifDescr                   1
        "2.2.1.3",     # ifType                    2
        "31.1.1.1.15", # ifHighSpeed               .. 1000 means 1GBit
        "2.2.1.8",     # ifOperStatus              4
        "31.1.1.1.6",  # ifHCInOctets              5
        "31.1.1.1.7",  # ifHCInUcastPkts           6
        "31.1.1.1.8",  # ifHCInMulticastPkts       7
        "31.1.1.1.9",  # ifHCInBroadcastPkts       8
        "2.2.1.13",    # ifInDiscards              9
        "2.2.1.14",    # ifInErrors               10
        "31.1.1.1.10", # ifHCOutOctets            11
        "31.1.1.1.11", # ifHCOutUcastPkts         12
        "31.1.1.1.12", # ifHCOutMulticastPkts     13
        "31.1.1.1.13", # ifHCOutBroadcastPkts     14
        "2.2.1.19",    # ifOutDiscards            15
        "2.2.1.20",    # ifOutErrors              16
        "2.2.1.21",    # ifOutQLen                17
        "31.1.1.1.18", # ifAlias                  18
        "2.2.1.6",     # ifPhysAddress            19
    ]), 
        (".1.0.8802.1.1.2.1.4.1.1",       [OID_END, "8", "9", "10" ]),        #HP: lldpRemSysName
        (".1.3.6.1.4.1.9.9.23.1.2.1.1",   [OID_END, "6", "7", "8" ]),   #Cisco: cdpCacheDeviceId
    ],
    'snmp_scan_function'        : if64_scan_function,
    'group'                     : 'if',
    'node_info'                 : True,
    'default_levels_variable'   : 'if_default_levels',
}